x[tbsp_ix,6] <- "tablespoon"
return(x)
}
cup2tsp <- function(x){
tbsp_ix <- which(x$Unit == "cup")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount/0.0208333
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "teaspoon"
return(x)
}
pkg2oz <- function(x){
tbsp_ix <- which(x$Unit == "ounce")
# Is it in ounces already or is it describing a package?
df_tmp <- subset(x, x$Unit == "ounce")
y <- which(grepl("[[:digit:]]",df_tmp[,3]))
amount <- df_tmp[y, 2]
regexp <- "[[:digit:]]+\\.?[[:digit:]]+"
scale_factor <- as.numeric(str_extract(df_tmp[y,3],regexp))
scaled_amount = amount * scale_factor
df_tmp[y,2] <- scaled_amount
df_tmp[y,3] <- paste("ounces" , df_tmp[1,1])
x[tbsp_ix,] <- df_tmp
return(x)
}
oz2cup <- function(x){
tbsp_ix <- which(x$Unit == "ounce")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount/8
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "cup"
return(x)
}
pd2oz <- function(x){
tbsp_ix <- which(x$Unit == "pound")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount/16
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "ounce"
return(x)
}
cup2oz <- function(x){
tbsp_ix <- which(x$Unit == "cup")
amount <- x$Quantity
scaled_amount <- amount*8
x[tbsp_ix,2] <- scaled_amount
x[tbsp_ix,4] <- "ounce"
return(x)
}
# For each, convert to a common unit
df_choc <- subset(df, Ingredient == "chocolate chip")
table(df_choc$Unit)
df_choc <- pd2oz(df_choc)
df_choc <- oz2cup(df_choc)
df_choc <- tbsp2cup(df_choc)
hist(df_choc$Quantity)
df_egg <- subset(df,Ingredient == "egg")
hist(df_egg$Quantity)
df_bs <- subset(df,Ingredient == "baking soda")
table(df_bs$Unit)
df_bs <- cup2tsp(df_bs)
df_sugar <- subset(df, Ingredient == "sugar")
table(df_sugar$Unit)
df_sugar <- tbsp2cup(df_sugar)
df_sugar <- tsp2cup(df_sugar)
df_sugar <- oz2cup(df_sugar)
df_ve <- subset(df, Ingredient == "vanilla")
table(df_ve$Unit)
df_ve <- oz2cup(df_ve)
df_ve <- cup2tbsp(df_ve)
df_ve <- tbsp2tsp(df_ve)
hist(df_ve$Quantity)
df_flour <- subset(df, Ingredient == "all purpose flour")
table(df_flour$Unit)
df_flour <- tbsp2cup(df_flour)
df_flour <- oz2cup(df_flour)
df_salt <- subset(df, Ingredient == "salt")
table(df_salt$Unit)
df_salt <- tbsp2tsp(df_salt)
# Cup is wrong- that is attached to salted nuts
#df_salt <- subset(df_salt, Unit != "cup")
df_brsug <- subset(df, Ingredient == "brown sugar")
table(df_brsug$Unit)
df_brsug <- tbsp2cup(df_brsug)
df_brsug <- oz2cup(df_brsug)
df_butter <- subset(df, Ingredient == "butter")
table(df_butter$Unit)
df_butter <- tbsp2cup(df_butter)
df_butter <- pd2oz(df_butter)
df_butter <- oz2cup(df_butter)
df_walnuts <- subset(df, Ingredient == "walnut")
table(df_walnuts$Unit)
scaled_df <- rbind(df_walnuts,df_butter,df_brsug, df_salt, df_flour, df_ve, df_egg, df_bs, df_sugar, df_choc)
scaled_df$Quantity <- as.numeric(scaled_df$Quantity)
scaled_df$Rating <- as.numeric(scaled_df$Rating)
### Add back all the other columns
df_comp <- subset(df, !(Ingredient %in% c("walnut","butter","all purpose flour","baking soda",
"brown sugar", "salt", "vanilla", "egg", "sugar",
"chocolate chip")))
master_df <- rbind(scaled_df, df_comp)
write.csv(master_df, file = "Scaled_Units.csv")
# Detect and remove outliers
scaled_df <- within(scaled_df, stan <- ave(Quantity, Ingredient, FUN = stdz)) %>%
subset(abs(stan) <= 3) # Because anything more than 3 std. deviations out of the mean is likely to be a scaling error, remove these
summary_stat <- scaled_df %>% group_by(Ingredient) %>% summarise(mean = mean(Quantity, na.rm = TRUE),
median = median(Quantity, na.rm = TRUE))
summary_stat
rm(list = ls())
setwd('./Aggregated_Data')
df <- read.csv("ingredient_measures_All_Clean.csv", row.names = NULL)
df <- read.csv("ingredient_measures_All_Cleaned.csv", row.names = NULL)
excl <- c( "E_95", "E_145", "E_282", "E_294", "E_360","AR_44","AR_81","AR_38")
df <- subset(df, ! (Recipe_Index %in% excl))
ingred_list <- unique(df$Ingredient)
with(droplevels(df), table(Ingredient))
num_ingred <- df %>% group_by(Recipe_Index) %>% summarise(num = n())
mean(num_ingred$num)
num_recipe <- length(unique(df$Recipe_Index))
num_recipe
vars <- colsplit(df$Text, " ", c("Quantity","Description"))
df$Quantity <- as.numeric(vars$Quantity)
df <- subset(df, Quantity != "NA")
df <- mutate(df, Unit = ifelse(grepl("cup",Text),"cup",
ifelse(grepl("tablespoon|tbsp", Text),"tablespoon",
ifelse(grepl("teaspoon|tsp", Text), "teaspoon",
ifelse(grepl("ounce", Text), "ounce",
ifelse(grepl("pound", Text), "pound",
ifelse(grepl("egg",Text), "egg", "other")))))))
table(df$Unit)
df <- subset(df, Unit != "other") # Remove things in unusual units
freqfunc <- function(x, n){
tail(sort(table(unlist(strsplit(as.character(x), ", ")))), n)
}
tsp2cup <- function(x){
tbsp_ix <- which(x$Unit == "teaspoon")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount*0.0208333
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "cup"
return(x)
}
tsp2tbsp <- function(x){
tbsp_ix <- which(x$Unit == "teaspoon")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount*(1/3)
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "tablespoon"
return(x)
}
tbsp2tsp <- function(x){
tbsp_ix <- which(x$Unit == "tablespoon")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount*3
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "teaspoon"
return(x)
}
cup2tsp <- function(x){
tbsp_ix <- which(x$Unit == "cup")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount/0.0208333
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "teaspoon"
return(x)
}
pkg2oz <- function(x){
tbsp_ix <- which(x$Unit == "ounce")
# Is it in ounces already or is it describing a package?
df_tmp <- subset(x, x$Unit == "ounce")
y <- which(grepl("[[:digit:]]",df_tmp[,3]))
amount <- df_tmp[y, 2]
regexp <- "[[:digit:]]+\\.?[[:digit:]]+"
scale_factor <- as.numeric(str_extract(df_tmp[y,3],regexp))
scaled_amount = amount * scale_factor
df_tmp[y,2] <- scaled_amount
df_tmp[y,3] <- paste("ounces" , df_tmp[1,1])
x[tbsp_ix,] <- df_tmp
return(x)
}
oz2cup <- function(x){
tbsp_ix <- which(x$Unit == "ounce")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount/8
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "cup"
return(x)
}
pd2oz <- function(x){
tbsp_ix <- which(x$Unit == "pound")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount/16
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "ounce"
return(x)
}
df_choc <- subset(df, Ingredient == "chocolate chip")
table(df_choc$Unit)
df_choc <- pd2oz(df_choc)
df_choc <- tbsp2cup(df_choc)
hist(df_choc$Quantity)
df_egg <- subset(df,Ingredient == "egg")
df_bs <- subset(df,Ingredient == "baking soda")
table(df_bs$Unit)
df_bs <- cup2tsp(df_bs)
hist(df_egg$Quantity)
df_sugar <- subset(df, Ingredient == "sugar")
table(df_sugar$Unit)
cup2tbsp <- function(x){
tbsp_ix <- which(x$Unit == "cup")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount/0.0625
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "tablespoon"
return(x)
}
df_sugar <- tbsp2cup(df_sugar)
cup2oz <- function(x){
tbsp_ix <- which(x$Unit == "cup")
amount <- x$Quantity
scaled_amount <- amount*8
x[tbsp_ix,2] <- scaled_amount
x[tbsp_ix,4] <- "ounce"
return(x)
}
df_sugar <- tsp2cup(df_sugar)
tbsp2cup <- function(x){
tbsp_ix <- which(x$Unit == "tablespoon")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount*0.0625
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "cup"
return(x)
}
df_choc <- oz2cup(df_choc)
df_sugar <- oz2cup(df_sugar)
df_ve <- subset(df, Ingredient == "vanilla")
table(df_ve$Unit)
df_ve <- oz2cup(df_ve)
df_ve <- cup2tbsp(df_ve)
df_ve <- tbsp2tsp(df_ve)
hist(df_ve$Quantity)
df_flour <- subset(df, Ingredient == "all purpose flour")
table(df_flour$Unit)
df_flour <- tbsp2cup(df_flour)
df_flour <- oz2cup(df_flour)
df_salt <- subset(df, Ingredient == "salt")
table(df_salt$Unit)
df_salt <- tbsp2tsp(df_salt)
df_brsug <- subset(df, Ingredient == "brown sugar")
table(df_brsug$Unit)
df_brsug <- tbsp2cup(df_brsug)
df_brsug <- oz2cup(df_brsug)
df_butter <- subset(df, Ingredient == "butter")
table(df_butter$Unit)
df_butter <- tbsp2cup(df_butter)
df_butter <- pd2oz(df_butter)
df_butter <- oz2cup(df_butter)
df_walnuts <- subset(df, Ingredient == "walnut")
table(df_walnuts$Unit)
scaled_df <- rbind(df_walnuts,df_butter,df_brsug, df_salt, df_flour, df_ve, df_egg, df_bs, df_sugar, df_choc)
scaled_df$Quantity <- as.numeric(scaled_df$Quantity)
scaled_df$Rating <- as.numeric(scaled_df$Rating)
df_comp <- subset(df, !(Ingredient %in% c("walnut","butter","all purpose flour","baking soda",
"brown sugar", "salt", "vanilla", "egg", "sugar",
"chocolate chip")))
master_df <- rbind(scaled_df, df_comp)
scaled_df <- within(scaled_df, stan <- ave(Quantity, Ingredient, FUN = stdz)) %>%
subset(abs(stan) <= 3) # Because anything more than 3 std. deviations out of the mean is likely to be a scaling error, remove these
master_df <- rbind(scaled_df, df_comp)
write.csv(master_df, file = "Scaled_Units.csv")
rm(list = ls())
df <- read.csv("Scaled_Units.csv", row.names = NULL)
df$Quantity <- as.numeric(as.character(df$Quantity))
n_recipes = length(unique(df$Recipe_Index))
num_ingred <- df %>% group_by(Recipe_Index) %>% summarise(num = n())
mean(num_ingred$num)
ingred_list <- unique(df$Ingredient)
padded_avg <- function(x){
quant <- as.vector(x)
# Pad with zeros
recipes_using = length(quant)
recipes_not = n_recipes - recipes_using
if (recipes_not > 0){  pad <- rep(0, length.out = recipes_not)
tmp_pad <- append(quant, pad)
padded_avg <- mean(tmp_pad)}
else{
padded_avg <- mean(quant)
}
return(padded_avg)
}
df_sum <- df %>% group_by(Ingredient, Unit) %>% summarise(mean = padded_avg(Quantity))
write.csv(df_sum, "All_Ingredient_Average.csv")
ingred_freq <- df %>% group_by(Ingredient) %>% summarise(count = n())
head(ingred_freq[order(ingred_freq$count, decreasing= T),], n = 10)
rm(list = ls())
setwd('./Aggregated_Data')
df <- read.csv("ingredient_measures_Misc_Addend.csv", row.names = NULL)
excl <- c( "E_95", "E_145", "E_282", "E_294", "E_360","AR_44","AR_81","AR_38")
df <- subset(df, ! (Recipe_Index %in% excl))
ingred_list <- unique(df$Ingredient)
with(droplevels(df), table(Ingredient))
num_ingred <- df %>% group_by(Recipe_Index) %>% summarise(num = n())
mean(num_ingred$num)
num_recipe <- length(unique(df$Recipe_Index))
num_recipe
vars <- colsplit(df$Text, " ", c("Quantity","Description"))
df$Quantity <- as.numeric(vars$Quantity)
df <- subset(df, Quantity != "NA")
df <- mutate(df, Unit = ifelse(grepl("cup",Text),"cup",
ifelse(grepl("tablespoon|tbsp", Text),"tablespoon",
ifelse(grepl("teaspoon|tsp", Text), "teaspoon",
ifelse(grepl("ounce", Text), "ounce",
ifelse(grepl("pound", Text), "pound",
ifelse(grepl("egg",Text), "egg", "other")))))))
table(df$Unit)
df <- subset(df, Unit != "other") # Remove things in unusual units
freqfunc <- function(x, n){
tail(sort(table(unlist(strsplit(as.character(x), ", ")))), n)
}
tbsp2cup <- function(x){
tbsp_ix <- which(x$Unit == "tablespoon")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount*0.0625
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "cup"
return(x)
}
tsp2cup <- function(x){
tbsp_ix <- which(x$Unit == "teaspoon")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount*0.0208333
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "cup"
return(x)
}
tsp2tbsp <- function(x){
tbsp_ix <- which(x$Unit == "teaspoon")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount*(1/3)
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "tablespoon"
return(x)
}
tbsp2tsp <- function(x){
tbsp_ix <- which(x$Unit == "tablespoon")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount*3
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "teaspoon"
return(x)
}
cup2tbsp <- function(x){
tbsp_ix <- which(x$Unit == "cup")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount/0.0625
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "tablespoon"
return(x)
}
cup2tsp <- function(x){
tbsp_ix <- which(x$Unit == "cup")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount/0.0208333
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "teaspoon"
return(x)
}
pkg2oz <- function(x){
tbsp_ix <- which(x$Unit == "ounce")
# Is it in ounces already or is it describing a package?
df_tmp <- subset(x, x$Unit == "ounce")
y <- which(grepl("[[:digit:]]",df_tmp[,3]))
amount <- df_tmp[y, 2]
regexp <- "[[:digit:]]+\\.?[[:digit:]]+"
scale_factor <- as.numeric(str_extract(df_tmp[y,3],regexp))
scaled_amount = amount * scale_factor
df_tmp[y,2] <- scaled_amount
df_tmp[y,3] <- paste("ounces" , df_tmp[1,1])
x[tbsp_ix,] <- df_tmp
return(x)
}
oz2cup <- function(x){
tbsp_ix <- which(x$Unit == "ounce")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount/8
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "cup"
return(x)
}
pd2oz <- function(x){
tbsp_ix <- which(x$Unit == "pound")
amount <- x[tbsp_ix, 5]
scaled_amount <- amount/16
x[tbsp_ix,5] <- scaled_amount
x[tbsp_ix,6] <- "ounce"
return(x)
}
cup2oz <- function(x){
tbsp_ix <- which(x$Unit == "cup")
amount <- x$Quantity
scaled_amount <- amount*8
x[tbsp_ix,2] <- scaled_amount
x[tbsp_ix,4] <- "ounce"
return(x)
}
df_choc <- subset(df, Ingredient == "chocolate chip")
table(df_choc$Unit)
df_choc <- pd2oz(df_choc)
df_choc <- oz2cup(df_choc)
df_choc <- tbsp2cup(df_choc)
hist(df_choc$Quantity)
df_egg <- subset(df,Ingredient == "egg")
hist(df_egg$Quantity)
df_bs <- subset(df,Ingredient == "baking soda")
table(df_bs$Unit)
df_bs <- cup2tsp(df_bs)
df_sugar <- subset(df, Ingredient == "sugar")
table(df_sugar$Unit)
df_sugar <- tbsp2cup(df_sugar)
df_sugar <- tsp2cup(df_sugar)
df_sugar <- oz2cup(df_sugar)
df_ve <- subset(df, Ingredient == "vanilla")
table(df_ve$Unit)
df_ve <- oz2cup(df_ve)
df_ve <- cup2tbsp(df_ve)
df_ve <- tbsp2tsp(df_ve)
hist(df_ve$Quantity)
df_flour <- subset(df, Ingredient == "all purpose flour")
table(df_flour$Unit)
df_flour <- tbsp2cup(df_flour)
df_flour <- oz2cup(df_flour)
df_salt <- subset(df, Ingredient == "salt")
table(df_salt$Unit)
df_salt <- tbsp2tsp(df_salt)
df_brsug <- subset(df, Ingredient == "brown sugar")
table(df_brsug$Unit)
df_brsug <- tbsp2cup(df_brsug)
df_brsug <- oz2cup(df_brsug)
df_butter <- subset(df, Ingredient == "butter")
table(df_butter$Unit)
df_butter <- tbsp2cup(df_butter)
df_butter <- pd2oz(df_butter)
df_butter <- oz2cup(df_butter)
df_walnuts <- subset(df, Ingredient == "walnut")
table(df_walnuts$Unit)
df_milk <- subset(df, Ingredient == "milk")
table(df_milk$Unit)
df_milk <- cup2tbsp(df_milk)
scaled_df <- rbind(df_walnuts,df_milk,df_butter,df_brsug, df_salt, df_flour, df_ve, df_egg, df_bs, df_sugar, df_choc)
scaled_df$Quantity <- as.numeric(scaled_df$Quantity)
scaled_df$Rating <- as.numeric(scaled_df$Rating)
df_comp <- subset(df, !(Ingredient %in% c("walnut","butter","all purpose flour","baking soda",
"brown sugar", "salt", "vanilla", "egg", "sugar",
"chocolate chip","milk")))
write.csv(master_df, file = "Scaled_Units_add.csv")
master_df <- rbind(scaled_df, df_comp)
write.csv(master_df, file = "Scaled_Units_add.csv")
rm(list = ls())
df <- read.csv("Scaled_Units.csv", row.names = NULL)
df$Quantity <- as.numeric(as.character(df$Quantity))
n_recipes = length(unique(df$Recipe_Index))
num_ingred <- df %>% group_by(Recipe_Index) %>% summarise(num = n())
mean(num_ingred$num)
ingred_list <- unique(df$Ingredient)
padded_avg <- function(x){
quant <- as.vector(x)
# Pad with zeros
recipes_using = length(quant)
recipes_not = n_recipes - recipes_using
if (recipes_not > 0){  pad <- rep(0, length.out = recipes_not)
tmp_pad <- append(quant, pad)
padded_avg <- mean(tmp_pad)}
else{
padded_avg <- mean(quant)
}
return(padded_avg)
}
df_sum <- df %>% group_by(Ingredient, Unit) %>% summarise(mean = padded_avg(Quantity))
View(df_sum)
df <- read.csv('Scaled_Units_addend.csv')
df <- read.csv('Scaled_Units_add.csv')
View(df)
df$REcipe_Index <- paste0("Misc_",df$Recipe_Index)
View(df)
df <- read.csv('Scaled_Units_add.csv')
df$Recipe_Index <- paste0("Misc_",df$Recipe_Index)
View(df)
write.csv(df, "Scaled_Units_add.csv")
write.csv(df, "Scaled_Units_add.csv")
rm(list = ls())
df <- read.csv("Scaled_Units.csv", row.names = NULL)
df$Quantity <- as.numeric(as.character(df$Quantity))
n_recipes = length(unique(df$Recipe_Index))
num_ingred <- df %>% group_by(Recipe_Index) %>% summarise(num = n())
mean(num_ingred$num)
ingred_list <- unique(df$Ingredient)
padded_avg <- function(x){
quant <- as.vector(x)
# Pad with zeros
recipes_using = length(quant)
recipes_not = n_recipes - recipes_using
if (recipes_not > 0){  pad <- rep(0, length.out = recipes_not)
tmp_pad <- append(quant, pad)
padded_avg <- mean(tmp_pad)}
else{
padded_avg <- mean(quant)
}
return(padded_avg)
}
df_sum <- df %>% group_by(Ingredient, Unit) %>% summarise(mean = padded_avg(Quantity))
write.csv(df_sum, "All_Ingredient_Average.csv")
View(df_sum)
